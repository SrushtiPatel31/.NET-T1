23/9

1.
using Npgsql;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace DB_APP
{
    public partial class Form1 : Form
    {
        NpgsqlConnection con;
        String constr = "Host=localhost;Port=5432;Username=postgres;Password=ljiet;Database=Demo";

        public void DBConnect()
        {
            try
            {
                con = new NpgsqlConnection(constr);
                con.Open();
                MessageBox.Show("Connected successfully..........");
            }
            catch(Exception e)
            {
                MessageBox.Show("Connection Failed " +e.Message);    
            }
        }
        public Form1()
        {
            InitializeComponent();
            DBConnect();
        }
        private void Form1_Load(object sender, EventArgs e)
        {
            MessageBox.Show("Form is Loading");
            show_data();
        }
        private void textBox1_TextChanged(object sender, EventArgs e)
        {

        }
        bool Agevalidate()
        {
            if(int.TryParse(tb_age.Text,out int age))
            {
                if(age>=18 && age <= 100)
                {
                    return true;    
                }
                else
                {
                    MessageBox.Show("Age must be between 18 & 100");
                    return false;
                }
            }
            else
            {
                MessageBox.Show("Age must contain any value");
                return false;
            }
        }
        bool Namevalidate()
        {
            if (tb_name.Text.Length > 3)
            {
                return true;
            }
            else
            {
                MessageBox.Show("Name length must be greater than 3 ");
                return false;
            }
        }
        private void btn_save_Click(object sender, EventArgs e)
        {
            if(Namevalidate() && Agevalidate() )
            {
                String InsertQuery = "insert into student(name,age) values (@name,@age)";
                using (NpgsqlCommand cmd = new NpgsqlCommand(InsertQuery, con))
                {
                    cmd.Parameters.AddWithValue("@name", tb_name.Text);
                    cmd.Parameters.AddWithValue("@age",int.Parse( tb_age.Text));
                    int rowsAffected = cmd.ExecuteNonQuery();

                    if (rowsAffected > 0)
                    {
                        MessageBox.Show("inserted Successfully.....");
                        tb_name.Clear();
                        tb_age.Clear();
                    }
                    else
                    {
                        MessageBox.Show("Data insertion Failed");
                    }
                }
            }
            else
            {
                MessageBox.Show("Validation Failed");
            }
            show_data();
        }
        private void btn_reset_Click(object sender, EventArgs e)
        {
            tb_name.Clear();
            tb_age.Clear();
        }
        void show_data()
        {
            con.Close();
            try
            {
                con.Open();
                String sel_Query = "select * from student";
                NpgsqlDataAdapter da = new NpgsqlDataAdapter(sel_Query, con);
                DataTable dt = new DataTable();
                da.Fill(dt);
                dgv_show.DataSource = dt;
            }
            catch(Exception e)
            {
                MessageBox.Show("Error data selection from DB " + e.Message);
            }
        }
        private void dgv_show_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            if (e.RowIndex >= 0)
            {
                DataGridViewRow row = dgv_show.Rows[e.RowIndex];
                tb_name.Text = row.Cells["name"].Value.ToString();
                tb_age.Text = row.Cells["age"].Value.ToString();
                lbl_id.Text=row.Cells["id"].Value.ToString();
            }
        }

        private void btn_update_Click(object sender, EventArgs e)
        {
            con.Close();
            try
            {
                con.Open();
                String update_Q = "update student set name=@name,age=@age where id=@id";
                using (NpgsqlCommand cmd = new NpgsqlCommand(update_Q, con))
                {
                    cmd.Parameters.AddWithValue("@name", tb_name.Text);
                    cmd.Parameters.AddWithValue("@age", int.Parse(tb_age.Text.ToString()));
                    cmd.Parameters.AddWithValue("@id", int.Parse(lbl_id.Text.ToString()));
                   
                    int affectedrow = cmd.ExecuteNonQuery();
                    if (affectedrow > 0)
                    {
                        MessageBox.Show("Updated successfully.......");
                        show_data();
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error " + ex.Message);
            }
        }

        private void btn_delete_Click(object sender, EventArgs e)
        {
            con.Close();
            try
            {
                con.Open();
                String update_Q = "delete from student where id=@id";
                using (NpgsqlCommand cmd = new NpgsqlCommand(update_Q, con))
                {
                    cmd.Parameters.AddWithValue("@id", int.Parse(lbl_id.Text.ToString()));
                    int affectedrow = cmd.ExecuteNonQuery();
                    if (affectedrow > 0)
                    {
                        MessageBox.Show("Deleted successfully.......");
                        show_data();
                        tb_name.Clear();
                        tb_age.Clear();
                        lbl_id.Text = " ";
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error " + ex.Message);
            }
        }

        private void btn_search_Click(object sender, EventArgs e)
        {
            if (String.IsNullOrEmpty(tb_search.Text))
            {
                MessageBox.Show("Enter Keyword to search");
                show_data();
                return;
            }
            else
            {
                con.Close();
                try
                {
                    con.Open();
                    String search_Q = "select id,name,age from student where name ILIKE @name";
                    using(NpgsqlDataAdapter da = new NpgsqlDataAdapter(search_Q, con))
                    {
                        da.SelectCommand.Parameters.AddWithValue("@name", "%" + tb_search.Text + "%");
                        DataTable sdt = new DataTable();
                        da.Fill(sdt);
                        if(sdt.Rows.Count > 0)
                        {
                            dgv_show.DataSource = sdt;
                        }
                        else
                        {
                            MessageBox.Show("NO Record Found");
                            show_data();
                        }
                    }
                }
                catch(Exception exp)
                {
                    MessageBox.Show("Error" + exp.Message);
                }
            }
        }
    }

}
